/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

dependencies {
  compile libraries.assertj
  compile libraries.guava
  compile libraries.guice
  compile libraries.testng
  compile libraries.commons_lang3
  compile libraries.commons_dbcp2
  compile libraries.slf4j_api
  compile libraries.snakeyaml
  compile libraries.httpclient
  compile libraries.ioutils
  compile libraries.tpchgen
  compile libraries.jsonpath
  compile libraries.bytebuddy
  compile libraries.reflections
  compile libraries.jsch
  compile libraries.freemarker
  compile libraries.joda

  testCompile libraries.spock
  testCompile libraries.hsqldb
  testCompile libraries.dbutils
  testCompile libraries.mina_sshd
}

// project information
ext.artifactId = 'tempto-core'
archivesBaseName = artifactId

task buildFatJar(type: Jar, dependsOn: assemble) {
  appendix = 'all'
  from sourceSets.main.output
  from {
    configurations.runtime.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
}

license {
  exclude "**/convention/sample-test/**/*.sql"
}

build.dependsOn.add(buildFatJar)

// publishing to sonatype
uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name artifactId
        artifactId artifactId
      }
    }
  }
}